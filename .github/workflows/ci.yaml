name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:
env:
  GO_VERSION: '1.23.0'
  GOLANGCI_LINT_VERSION: '1.60.3'
jobs:
  git-secrets:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Pull latest awslabs/git-secrets repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: awslabs/git-secrets
          ref: 1.3.0
          fetch-tags: true
          path: git-secrets
      - name: Install git secrets from source
        run: sudo make install
        working-directory: git-secrets
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Scan repository for git secrets
        run: |
          git secrets --register-aws
          git secrets --scan-history
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working_dir: ['.']
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: golangci/golangci-lint-action@v6 # v6.1.0
        with:
          version: v${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.working_dir }}
          args: --fix=false --timeout=5m
  yamllint:
    name: yamllint-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - run: yamllint .
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout finch-deamon repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Build the daemon
        run: make build
      - name: Run unit tests
        run: make test-unit
      - name: Create build artifacts
        run: tar -cvf build-artifacts.tar bin/
      - name: Upload build artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: build-artifacts
          path: build-artifacts.tar
  e2e-test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        containerd: ["1.7.22", "2.0.0"]
      fail-fast: false
    timeout-minutes: 10
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd }}
    steps:
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout finch-daemon repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Stop pre-existing containerd and docker services
        run: |
          sudo systemctl stop docker
          sudo systemctl stop containerd
      - name: Install Dependencies for e2e Testing
        run: ./setup-test-env.sh
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifacts
      - name: Extract build artifacts
        run: tar -xvf build-artifacts.tar
      - name: Remove default podman network config
        run: |
          sudo ls /etc/cni/net.d
          sudo rm /etc/cni/net.d/87-podman-bridge.conflist
      - name: Start finch-daemon
        run: sudo bin/finch-daemon  --debug --socket-owner $UID &
      - name: Run e2e test
        run: sudo make test-e2e
