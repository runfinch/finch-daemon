// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runfinch/finch-daemon/internal/backend (interfaces: NerdctlBuilderSvc)
//
// Generated by this command:
//
//	mockgen --destination=../../mocks/mocks_backend/nerdctlbuildersvc.go -package=mocks_backend github.com/runfinch/finch-daemon/internal/backend NerdctlBuilderSvc
//

// Package mocks_backend is a generated GoMock package.
package mocks_backend

import (
	context "context"
	reflect "reflect"

	types "github.com/containerd/nerdctl/v2/pkg/api/types"
	backend "github.com/runfinch/finch-daemon/internal/backend"
	gomock "go.uber.org/mock/gomock"
)

// MockNerdctlBuilderSvc is a mock of NerdctlBuilderSvc interface.
type MockNerdctlBuilderSvc struct {
	ctrl     *gomock.Controller
	recorder *MockNerdctlBuilderSvcMockRecorder
	isgomock struct{}
}

// MockNerdctlBuilderSvcMockRecorder is the mock recorder for MockNerdctlBuilderSvc.
type MockNerdctlBuilderSvcMockRecorder struct {
	mock *MockNerdctlBuilderSvc
}

// NewMockNerdctlBuilderSvc creates a new mock instance.
func NewMockNerdctlBuilderSvc(ctrl *gomock.Controller) *MockNerdctlBuilderSvc {
	mock := &MockNerdctlBuilderSvc{ctrl: ctrl}
	mock.recorder = &MockNerdctlBuilderSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNerdctlBuilderSvc) EXPECT() *MockNerdctlBuilderSvcMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockNerdctlBuilderSvc) Build(ctx context.Context, client backend.ContainerdClient, options types.BuilderBuildOptions, buildID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", ctx, client, options, buildID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Build indicates an expected call of Build.
func (mr *MockNerdctlBuilderSvcMockRecorder) Build(ctx, client, options, buildID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockNerdctlBuilderSvc)(nil).Build), ctx, client, options, buildID)
}

// GetBuildkitHost mocks base method.
func (m *MockNerdctlBuilderSvc) GetBuildkitHost() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildkitHost")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuildkitHost indicates an expected call of GetBuildkitHost.
func (mr *MockNerdctlBuilderSvcMockRecorder) GetBuildkitHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildkitHost", reflect.TypeOf((*MockNerdctlBuilderSvc)(nil).GetBuildkitHost))
}
