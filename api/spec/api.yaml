openapi: 3.0.0
info:
  title: Finch Daemon API
  description: |
    Finch Daemon implements a subset of the Docker API Spec v1.43.
    This document provides a detailed reference for the Docker API endpoints implemented by Finch Daemon.
  version: 1.43.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost/v1.43
    description: Finch Daemon API server (via Unix socket)

# All components consolidated into a single file
components:
  # Common schemas
  schemas:
    # Common schemas
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
      required:
        - message

    # Exec-related schemas
    ExecConfig:
      type: object
      properties:
        AttachStdin:
          type: boolean
          description: Attach to stdin
          default: false
        AttachStdout:
          type: boolean
          description: Attach to stdout
          default: true
        AttachStderr:
          type: boolean
          description: Attach to stderr
          default: true
        DetachKeys:
          type: string
          description: Override the key sequence for detaching a container
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
          default: false
        Cmd:
          type: array
          description: Command to run
          items:
            type: string
        Env:
          type: array
          description: Environment variables
          items:
            type: string
        WorkingDir:
          type: string
          description: Working directory
        Privileged:
          type: boolean
          description: Give extended privileges to the command
          default: false
        User:
          type: string
          description: User that will run the command

    ExecStartConfig:
      type: object
      properties:
        Detach:
          type: boolean
          description: Detach from the command
          default: false
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
          default: false

    ExecInspectResponse:
      type: object
      properties:
        ID:
          type: string
          description: Exec ID
        Running:
          type: boolean
          description: Whether the exec is running
        ExitCode:
          type: integer
          description: Exit code
        ProcessConfig:
          type: object
          properties:
            tty:
              type: boolean
              description: Whether a TTY was allocated
            entrypoint:
              type: string
              description: Entrypoint
            arguments:
              type: array
              items:
                type: string
              description: Arguments
            privileged:
              type: boolean
              description: Whether the exec has extended privileges
        OpenStdin:
          type: boolean
          description: Whether stdin is open
        OpenStderr:
          type: boolean
          description: Whether stderr is open
        OpenStdout:
          type: boolean
          description: Whether stdout is open
        ContainerID:
          type: string
          description: Container ID
        Pid:
          type: integer
          description: Process ID

    # Image-related schemas
    ImageSummary:
      type: object
      properties:
        Id:
          type: string
          description: Image ID
        ParentId:
          type: string
          description: Parent image ID
        RepoTags:
          type: array
          description: Repository tags
          items:
            type: string
        RepoDigests:
          type: array
          description: Repository digests
          items:
            type: string
        Created:
          type: integer
          description: When the image was created
          format: int64
        Size:
          type: integer
          description: Size of the image in bytes
          format: int64
        SharedSize:
          type: integer
          description: Shared size of the image in bytes
          format: int64
        VirtualSize:
          type: integer
          description: Virtual size of the image in bytes
          format: int64
        Labels:
          type: object
          description: Image labels
          additionalProperties:
            type: string
        Containers:
          type: integer
          description: Number of containers using this image

    ImageInspect:
      type: object
      properties:
        Id:
          type: string
          description: Image ID
        RepoTags:
          type: array
          description: Repository tags
          items:
            type: string
        RepoDigests:
          type: array
          description: Repository digests
          items:
            type: string
        Parent:
          type: string
          description: Parent image ID
        Comment:
          type: string
          description: Comment
        Created:
          type: string
          description: When the image was created
          format: date-time
        Container:
          type: string
          description: Container used to create the image
        ContainerConfig:
          $ref: '#/components/schemas/ContainerConfig'
        DockerVersion:
          type: string
          description: Docker version used to build the image
        Author:
          type: string
          description: Author of the image
        Config:
          $ref: '#/components/schemas/ContainerConfig'
        Architecture:
          type: string
          description: Hardware architecture
        Os:
          type: string
          description: Operating system
        OsVersion:
          type: string
          description: Operating system version
        Size:
          type: integer
          description: Size of the image in bytes
          format: int64
        VirtualSize:
          type: integer
          description: Virtual size of the image in bytes
          format: int64
        GraphDriver:
          type: object
          description: Graph driver
          properties:
            Data:
              type: object
              additionalProperties:
                type: string
            Name:
              type: string
        RootFS:
          type: object
          description: Root filesystem
          properties:
            Type:
              type: string
              description: Type of filesystem
            Layers:
              type: array
              description: Layers
              items:
                type: string
        Metadata:
          type: object
          description: Metadata
          properties:
            LastTagTime:
              type: string
              description: When the image was last tagged
              format: date-time

    ImageLoadResponse:
      type: object
      properties:
        stream:
          type: string
          description: Status output from loading the image

    # Network-related schemas
    Network:
      type: object
      properties:
        Name:
          type: string
          description: Network name
        Id:
          type: string
          description: Network ID
        Created:
          type: string
          description: When the network was created
          format: date-time
        Scope:
          type: string
          description: Network scope
        Driver:
          type: string
          description: Network driver
        EnableIPv6:
          type: boolean
          description: Whether IPv6 is enabled on the network
        IPAM:
          type: object
          description: IP Address Management
          properties:
            Driver:
              type: string
              description: IPAM driver
            Options:
              type: object
              description: IPAM driver options
              additionalProperties:
                type: string
            Config:
              type: array
              description: IPAM configurations
              items:
                type: object
                properties:
                  Subnet:
                    type: string
                    description: Subnet
                  IPRange:
                    type: string
                    description: IP range
                  Gateway:
                    type: string
                    description: Gateway
                  AuxiliaryAddresses:
                    type: object
                    description: Auxiliary addresses
                    additionalProperties:
                      type: string
        Internal:
          type: boolean
          description: Whether the network is internal
        Attachable:
          type: boolean
          description: Whether the network is attachable
        Ingress:
          type: boolean
          description: Whether the network is ingress
        ConfigFrom:
          type: object
          description: Network configuration source
          properties:
            Network:
              type: string
              description: Network name
        ConfigOnly:
          type: boolean
          description: Whether the network is a configuration only network
        Containers:
          type: object
          description: Containers connected to the network
          additionalProperties:
            type: object
            properties:
              Name:
                type: string
                description: Container name
              EndpointID:
                type: string
                description: Endpoint ID
              MacAddress:
                type: string
                description: MAC address
              IPv4Address:
                type: string
                description: IPv4 address
              IPv6Address:
                type: string
                description: IPv6 address
        Options:
          type: object
          description: Network options
          additionalProperties:
            type: string
        Labels:
          type: object
          description: Network labels
          additionalProperties:
            type: string

    NetworkCreateRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          type: string
          description: Network name
        CheckDuplicate:
          type: boolean
          description: Check for duplicate networks
        Driver:
          type: string
          description: Network driver
          default: bridge
        Internal:
          type: boolean
          description: Whether the network is internal
        Attachable:
          type: boolean
          description: Whether the network is attachable
        Ingress:
          type: boolean
          description: Whether the network is ingress
        IPAM:
          type: object
          description: IP Address Management
          properties:
            Driver:
              type: string
              description: IPAM driver
            Config:
              type: array
              description: IPAM configurations
              items:
                type: object
                properties:
                  Subnet:
                    type: string
                    description: Subnet
                  IPRange:
                    type: string
                    description: IP range
                  Gateway:
                    type: string
                    description: Gateway
                  AuxiliaryAddresses:
                    type: object
                    description: Auxiliary addresses
                    additionalProperties:
                      type: string
            Options:
              type: object
              description: IPAM driver options
              additionalProperties:
                type: string
        EnableIPv6:
          type: boolean
          description: Whether IPv6 is enabled on the network
        Options:
          type: object
          description: Network options
          additionalProperties:
            type: string
        Labels:
          type: object
          description: Network labels
          additionalProperties:
            type: string

    NetworkCreateResponse:
      type: object
      properties:
        Id:
          type: string
          description: Network ID
        Warning:
          type: string
          description: Warning message

    NetworkConnectRequest:
      type: object
      properties:
        Container:
          type: string
          description: Container ID or name
        EndpointConfig:
          type: object
          description: Endpoint configuration
          properties:
            IPAMConfig:
              type: object
              description: IPAM configuration
              properties:
                IPv4Address:
                  type: string
                  description: IPv4 address
                IPv6Address:
                  type: string
                  description: IPv6 address
                LinkLocalIPs:
                  type: array
                  description: Link-local IPs
                  items:
                    type: string
            Links:
              type: array
              description: Links
              items:
                type: string
            Aliases:
              type: array
              description: Aliases
              items:
                type: string
            NetworkID:
              type: string
              description: Network ID
            EndpointID:
              type: string
              description: Endpoint ID
            Gateway:
              type: string
              description: Gateway
            IPAddress:
              type: string
              description: IP address
            IPPrefixLen:
              type: integer
              description: IP prefix length
            IPv6Gateway:
              type: string
              description: IPv6 gateway
            GlobalIPv6Address:
              type: string
              description: Global IPv6 address
            GlobalIPv6PrefixLen:
              type: integer
              description: Global IPv6 prefix length
            MacAddress:
              type: string
              description: MAC address
            DriverOpts:
              type: object
              description: Driver options
              additionalProperties:
                type: string

    # Volume-related schemas
    Volume:
      type: object
      properties:
        Name:
          type: string
          description: Volume name
        Driver:
          type: string
          description: Volume driver
        Mountpoint:
          type: string
          description: Mount point
        CreatedAt:
          type: string
          description: When the volume was created
          format: date-time
        Status:
          type: object
          description: Volume status
          additionalProperties:
            type: object
        Labels:
          type: object
          description: Volume labels
          additionalProperties:
            type: string
        Scope:
          type: string
          description: Volume scope
        Options:
          type: object
          description: Volume driver options
          additionalProperties:
            type: string
        UsageData:
          type: object
          description: Usage data
          properties:
            Size:
              type: integer
              description: Amount of disk space used by the volume
              format: int64
            RefCount:
              type: integer
              description: Number of containers referencing this volume
              format: int64

    VolumeCreateRequest:
      type: object
      properties:
        Name:
          type: string
          description: Volume name
        Driver:
          type: string
          description: Volume driver
          default: local
        DriverOpts:
          type: object
          description: Volume driver options
          additionalProperties:
            type: string
        Labels:
          type: object
          description: Volume labels
          additionalProperties:
            type: string

    VolumeListResponse:
      type: object
      properties:
        Volumes:
          type: array
          description: List of volumes
          items:
            $ref: '#/components/schemas/Volume'
        Warnings:
          type: array
          description: Warnings
          items:
            type: string

    # Distribution-related schemas
    DistributionInspect:
      type: object
      properties:
        Descriptor:
          type: object
          description: Descriptor
          properties:
            MediaType:
              type: string
              description: Media type
            Size:
              type: integer
              description: Size
              format: int64
            Digest:
              type: string
              description: Digest
            URLs:
              type: array
              description: URLs
              items:
                type: string
        Platforms:
          type: array
          description: Platforms
          items:
            type: object
            properties:
              Architecture:
                type: string
                description: Architecture
              OS:
                type: string
                description: OS
              OSVersion:
                type: string
                description: OS version
              OSFeatures:
                type: array
                description: OS features
                items:
                  type: string
              Variant:
                type: string
                description: Variant
              Features:
                type: array
                description: Features
                items:
                  type: string

    # Build-related schemas
    BuildResult:
      type: object
      properties:
        stream:
          type: string
          description: Build output stream
        error:
          type: string
          description: Error message
        errorDetail:
          type: object
          description: Error details
          properties:
            code:
              type: integer
              description: Error code
            message:
              type: string
              description: Error message
        aux:
          type: object
          description: Auxiliary data
          properties:
            ID:
              type: string
              description: Image ID
        progress:
          type: string
          description: Progress information
        progressDetail:
          type: object
          description: Progress details
          properties:
            current:
              type: integer
              description: Current progress
            total:
              type: integer
              description: Total progress

    # Container-related schemas
    ContainerConfig:
      type: object
      properties:
        Hostname:
          type: string
          description: Container host name
        User:
          type: string
          description: Username or UID to run commands inside the container
        AttachStdin:
          type: boolean
          description: Attach the standard input
          default: false
        ExposedPorts:
          type: object
          description: Ports to expose from the container without publishing to the host
          additionalProperties:
            type: object
        Tty:
          type: boolean
          description: Attach standard streams to a TTY, including stdin if it is not closed
          default: false
        Env:
          type: array
          description: List of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Cmd:
          type: array
          description: Command to run when starting the container
          items:
            type: string
        Image:
          type: string
          description: Name of the image as it was passed by the operator
        Volumes:
          type: object
          description: List of volumes (mounts) used for the container
          additionalProperties:
            type: object
        WorkingDir:
          type: string
          description: Current directory (PWD) in the command will be launched
        Entrypoint:
          type: array
          description: Entrypoint to run when starting the container
          items:
            type: string
        NetworkDisabled:
          type: boolean
          description: Disable networking for the container
        MacAddress:
          type: string
          description: Container MAC address (e.g., "12:34:56:78:9a:bc")
        Labels:
          type: object
          description: Key-value map of container metadata
          additionalProperties:
            type: string
        StopSignal:
          type: string
          description: Signal to stop a container (e.g., "SIGTERM")
        StopTimeout:
          type: integer
          description: Timeout (in seconds) to stop a container

    HostConfig:
      type: object
      properties:
        Binds:
          type: array
          description: List of volume bindings for this container (e.g., ["/host:/container:ro"])
          items:
            type: string
        ContainerIDFile:
          type: string
          description: File path where the container ID is written
        LogConfig:
          type: object
          description: Log configuration for the container
          properties:
            Type:
              type: string
              description: Log driver to use
              default: json-file
            Config:
              type: object
              description: Log driver specific configuration
              additionalProperties:
                type: string
        NetworkMode:
          type: string
          description: Network mode to use for the container (e.g., "bridge", "host", "none")
          default: bridge
        PortBindings:
          type: object
          description: Port mapping between the exposed port (container) and the host
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                HostIp:
                  type: string
                  description: Host IP address to bind to
                HostPort:
                  type: string
                  description: Host port to bind to
        RestartPolicy:
          type: object
          description: Restart policy to be used for the container
          properties:
            Name:
              type: string
              description: Restart policy name (no, always, unless-stopped, on-failure)
              default: no
            MaximumRetryCount:
              type: integer
              description: Maximum number of restarts for on-failure policy
              default: 0
        AutoRemove:
          type: boolean
          description: Automatically remove the container when it exits
          default: false
        VolumesFrom:
          type: array
          description: List of volumes to take from other containers
          items:
            type: string
        CapAdd:
          type: array
          description: List of kernel capabilities to add to the container
          items:
            type: string
        CapDrop:
          type: array
          description: List of kernel capabilities to remove from the container
          items:
            type: string
        CgroupnsMode:
          type: string
          description: Cgroup namespace mode to use for the container ("host" or "private")
        Dns:
          type: array
          description: List of DNS servers for the container
          items:
            type: string
        DnsOptions:
          type: array
          description: List of DNS options for the container
          items:
            type: string
        DnsSearch:
          type: array
          description: List of DNS search domains for the container
          items:
            type: string
        ExtraHosts:
          type: array
          description: List of hostnames/IP mappings to add to /etc/hosts
          items:
            type: string
        GroupAdd:
          type: array
          description: List of additional groups that the container process will run as
          items:
            type: string
        IpcMode:
          type: string
          description: IPC namespace to use for the container
        OomKillDisable:
          type: boolean
          description: Whether to disable OOM Killer for the container
          default: false
        PidMode:
          type: string
          description: PID namespace to use for the container
        Privileged:
          type: boolean
          description: Give extended privileges to this container
          default: false
        ReadonlyRootfs:
          type: boolean
          description: Mount the container's root filesystem as read only
          default: false
        SecurityOpt:
          type: array
          description: List of security options for the container
          items:
            type: string
        Tmpfs:
          type: object
          description: Temporary filesystems to mount
          additionalProperties:
            type: string
        UTSMode:
          type: string
          description: UTS namespace to use for the container
        ShmSize:
          type: integer
          description: Size of /dev/shm in bytes
          format: int64
        Sysctls:
          type: object
          description: Kernel parameters to set in the container
          additionalProperties:
            type: string
        Runtime:
          type: string
          description: Runtime to use for this container
        CpuShares:
          type: integer
          description: CPU shares (relative weight vs. other containers)
          format: int64
        CpuPeriod:
          type: integer
          description: CPU CFS (Completely Fair Scheduler) period
          format: int64
        CpuQuota:
          type: integer
          description: CPU CFS (Completely Fair Scheduler) quota
          format: int64
        CpusetCpus:
          type: string
          description: CPUs in which to allow execution (e.g., "0-3", "0,1")
        CpusetMems:
          type: string
          description: Memory nodes (MEMs) in which to allow execution (e.g., "0-3", "0,1")
        Memory:
          type: integer
          description: Memory limit in bytes
          format: int64
        MemoryReservation:
          type: integer
          description: Memory soft limit in bytes
          format: int64
        MemorySwap:
          type: integer
          description: Total memory usage (memory + swap); set `-1` to enable unlimited swap
          format: int64
        MemorySwappiness:
          type: integer
          description: Tune container memory swappiness (0 to 100)
          minimum: 0
          maximum: 100
        BlkioWeight:
          type: integer
          description: Block IO weight (relative weight vs. other containers). The weight is a value between 10 and 1000 that affects the scheduling priority for block IO operations.
          minimum: 10
          maximum: 1000
        BlkioWeightDevice:
          type: array
          description: Block IO weight for specific devices. Each item in the array specifies a device path and the IO weight for that device.
          items:
            type: object
            properties:
              Path:
                type: string
                description: Device path (e.g., "/dev/sda")
              Weight:
                type: integer
                description: Weight for the device (value between 10 and 1000)
                minimum: 10
                maximum: 1000
        BlkioDeviceReadBps:
          type: array
          description: Limit read rate from a device (bytes per second). Each item in the array specifies a device path and the rate limit for that device.
          items:
            type: object
            properties:
              Path:
                type: string
                description: Device path (e.g., "/dev/sda")
              Rate:
                type: integer
                description: Rate limit in bytes per second (e.g., 10485760 for 10MB/s)
                format: int64
        BlkioDeviceWriteBps:
          type: array
          description: Limit write rate to a device (bytes per second). Each item in the array specifies a device path and the rate limit for that device.
          items:
            type: object
            properties:
              Path:
                type: string
                description: Device path (e.g., "/dev/sda")
              Rate:
                type: integer
                description: Rate limit in bytes per second (e.g., 10485760 for 10MB/s)
                format: int64
        BlkioDeviceReadIOps:
          type: array
          description: Limit read rate from a device (IO per second). Each item in the array specifies a device path and the IO rate limit for that device.
          items:
            type: object
            properties:
              Path:
                type: string
                description: Device path (e.g., "/dev/sda")
              Rate:
                type: integer
                description: Rate limit in IO operations per second (e.g., 1000 for 1000 IOPS)
                format: int64
        BlkioDeviceWriteIOps:
          type: array
          description: Limit write rate to a device (IO per second). Each item in the array specifies a device path and the IO rate limit for that device.
          items:
            type: object
            properties:
              Path:
                type: string
                description: Device path (e.g., "/dev/sda")
              Rate:
                type: integer
                description: Rate limit in IO operations per second (e.g., 1000 for 1000 IOPS)
                format: int64
        Devices:
          type: array
          description: Expose host devices to the container. Each item in the array specifies a device mapping between the host and the container.
          items:
            type: object
            properties:
              PathOnHost:
                type: string
                description: Path of the device on the host (e.g., "/dev/deviceName")
              PathInContainer:
                type: string
                description: Path of the device in the container (e.g., "/dev/deviceName")
              CgroupPermissions:
                type: string
                description: Cgroup permissions for the device (e.g., "rwm" for read-write-mknod)
        PidsLimit:
          type: integer
          description: Tune container pids limit (set -1 for unlimited). This limits the number of processes that can run inside the container.
          format: int64

    CreateContainerRequest:
      type: object
      required:
        - Image
      properties:
        Hostname:
          type: string
          description: Container host name
        User:
          type: string
          description: Username or UID to run commands inside the container
        AttachStdin:
          type: boolean
          description: Attach the standard input
          default: false
        ExposedPorts:
          type: object
          description: Ports to expose from the container without publishing to the host
          additionalProperties:
            type: object
        Tty:
          type: boolean
          description: Attach standard streams to a TTY, including stdin if it is not closed
          default: false
        Env:
          type: array
          description: List of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Cmd:
          type: array
          description: Command to run when starting the container
          items:
            type: string
        Image:
          type: string
          description: Name of the image as it was passed by the operator
        Volumes:
          type: object
          description: List of volumes (mounts) used for the container
          additionalProperties:
            type: object
        WorkingDir:
          type: string
          description: Current directory (PWD) in the command will be launched
        Entrypoint:
          type: array
          description: Entrypoint to run when starting the container
          items:
            type: string
        NetworkDisabled:
          type: boolean
          description: Disable networking for the container
        MacAddress:
          type: string
          description: Container MAC address (e.g., "12:34:56:78:9a:bc")
        Labels:
          type: object
          description: Key-value map of container metadata
          additionalProperties:
            type: string
        StopSignal:
          type: string
          description: Signal to stop a container (e.g., "SIGTERM")
        StopTimeout:
          type: integer
          description: Timeout (in seconds) to stop a container
        HostConfig:
          $ref: '#/components/schemas/HostConfig'

    CreateContainerResponse:
      type: object
      properties:
        Id:
          type: string
          description: The ID of the created container
        Warnings:
          type: array
          description: Warnings encountered during container creation
          items:
            type: string
      required:
        - Id
        - Warnings

    ContainerSummary:
      type: object
      properties:
        Id:
          type: string
          description: Container ID
        Names:
          type: array
          description: Container names
          items:
            type: string
        Image:
          type: string
          description: Container image
        ImageID:
          type: string
          description: Container image ID
        Command:
          type: string
          description: Command executed in the container
        Created:
          type: integer
          description: When the container was created
          format: int64
        State:
          type: string
          description: Container state (created, running, paused, stopped, exited, pausing, unknown)
        Status:
          type: string
          description: Container status
        Ports:
          type: array
          description: Published ports
          items:
            type: object
            properties:
              PrivatePort:
                type: integer
                description: Private port
              PublicPort:
                type: integer
                description: Public port
              Type:
                type: string
                description: Port type (tcp or udp)
        Labels:
          type: object
          description: Container labels
          additionalProperties:
            type: string
        NetworkSettings:
          type: object
          properties:
            Networks:
              type: object
              additionalProperties:
                type: object
                properties:
                  IPAddress:
                    type: string
                    description: Container IP address
                  Gateway:
                    type: string
                    description: Gateway address
        Mounts:
          type: array
          description: Container mounts
          items:
            type: object
            properties:
              Type:
                type: string
                description: Mount type (bind, volume, tmpfs)
              Source:
                type: string
                description: Source path
              Destination:
                type: string
                description: Destination path
              Mode:
                type: string
                description: Mount mode
              RW:
                type: boolean
                description: Read-write mode
              Propagation:
                type: string
                description: Propagation mode

    ContainerInspectResponse:
      type: object
      description: Detailed container information
      properties:
        Id:
          type: string
          description: Container ID
        Created:
          type: string
          description: When the container was created
          format: date-time
        Path:
          type: string
          description: Command path
        Args:
          type: array
          description: Command arguments
          items:
            type: string
        State:
          type: object
          description: Container state
          properties:
            Status:
              type: string
              description: Container status (created, running, paused, restarting, removing, exited, dead)
            Running:
              type: boolean
              description: Whether the container is running
            Paused:
              type: boolean
              description: Whether the container is paused
            Restarting:
              type: boolean
              description: Whether the container is restarting
            OOMKilled:
              type: boolean
              description: Whether the container was killed because it ran out of memory
            Dead:
              type: boolean
              description: Whether the container is dead
            Pid:
              type: integer
              description: Process ID
            ExitCode:
              type: integer
              description: Exit code
            Error:
              type: string
              description: Error message
            StartedAt:
              type: string
              description: When the container was started
              format: date-time
            FinishedAt:
              type: string
              description: When the container finished
              format: date-time
        Image:
          type: string
          description: Container image
        ResolvConfPath:
          type: string
          description: Path to resolv.conf
        HostnamePath:
          type: string
          description: Path to hostname
        HostsPath:
          type: string
          description: Path to hosts
        LogPath:
          type: string
          description: Path to log file
        Name:
          type: string
          description: Container name
        RestartCount:
          type: integer
          description: Number of times the container has been restarted
        Driver:
          type: string
          description: Storage driver
        Platform:
          type: string
          description: Platform
        MountLabel:
          type: string
          description: Mount label
        ProcessLabel:
          type: string
          description: Process label
        AppArmorProfile:
          type: string
          description: AppArmor profile
        ExecIDs:
          type: array
          description: Exec IDs
          items:
            type: string
        HostConfig:
          $ref: '#/components/schemas/HostConfig'
        GraphDriver:
          type: object
          description: Graph driver
          properties:
            Data:
              type: object
              additionalProperties:
                type: string
            Name:
              type: string
        SizeRw:
          type: integer
          description: Size of writable layer
          format: int64
        SizeRootFs:
          type: integer
          description: Size of root filesystem
          format: int64
        Mounts:
          type: array
          description: Container mounts
          items:
            type: object
            properties:
              Type:
                type: string
                description: Mount type (bind, volume, tmpfs)
              Source:
                type: string
                description: Source path
              Destination:
                type: string
                description: Destination path
              Mode:
                type: string
                description: Mount mode
              RW:
                type: boolean
                description: Read-write mode
              Propagation:
                type: string
                description: Propagation mode
        Config:
          $ref: '#/components/schemas/ContainerConfig'
        NetworkSettings:
          type: object
          description: Network settings
          properties:
            Bridge:
              type: string
              description: Bridge name
            SandboxID:
              type: string
              description: Sandbox ID
            HairpinMode:
              type: boolean
              description: Hairpin mode
            LinkLocalIPv6Address:
              type: string
              description: Link local IPv6 address
            LinkLocalIPv6PrefixLen:
              type: integer
              description: Link local IPv6 prefix length
            Ports:
              type: object
              description: Port mappings
              additionalProperties:
                type: array
                items:
                  type: object
                  properties:
                    HostIp:
                      type: string
                      description: Host IP
                    HostPort:
                      type: string
                      description: Host port
            SandboxKey:
              type: string
              description: Sandbox key
            SecondaryIPAddresses:
              type: array
              description: Secondary IP addresses
              items:
                type: object
            SecondaryIPv6Addresses:
              type: array
              description: Secondary IPv6 addresses
              items:
                type: object
            EndpointID:
              type: string
              description: Endpoint ID
            Gateway:
              type: string
              description: Gateway
            GlobalIPv6Address:
              type: string
              description: Global IPv6 address
            GlobalIPv6PrefixLen:
              type: integer
              description: Global IPv6 prefix length
            IPAddress:
              type: string
              description: IP address
            IPPrefixLen:
              type: integer
              description: IP prefix length
            IPv6Gateway:
              type: string
              description: IPv6 gateway
            MacAddress:
              type: string
              description: MAC address
            Networks:
              type: object
              description: Networks
              additionalProperties:
                type: object
                properties:
                  IPAMConfig:
                    type: object
                    description: IPAM config
                    properties:
                      IPv4Address:
                        type: string
                        description: IPv4 address
                      IPv6Address:
                        type: string
                        description: IPv6 address
                  Links:
                    type: array
                    description: Links
                    items:
                      type: string
                  Aliases:
                    type: array
                    description: Aliases
                    items:
                      type: string
                  NetworkID:
                    type: string
                    description: Network ID
                  EndpointID:
                    type: string
                    description: Endpoint ID
                  Gateway:
                    type: string
                    description: Gateway
                  IPAddress:
                    type: string
                    description: IP address
                  IPPrefixLen:
                    type: integer
                    description: IP prefix length
                  IPv6Gateway:
                    type: string
                    description: IPv6 gateway
                  GlobalIPv6Address:
                    type: string
                    description: Global IPv6 address
                  GlobalIPv6PrefixLen:
                    type: integer
                    description: Global IPv6 prefix length
                  MacAddress:
                    type: string
                    description: MAC address

    ContainerWaitResponse:
      type: object
      properties:
        StatusCode:
          type: integer
          description: Exit code of the container
        Error:
          type: object
          description: Error information
          properties:
            Message:
              type: string
              description: Error message

    # System-related schemas
    SystemInfo:
      type: object
      properties:
        ID:
          type: string
          description: Unique identifier of the daemon
        Containers:
          type: integer
          description: Total number of containers
        ContainersRunning:
          type: integer
          description: Number of containers running
        ContainersPaused:
          type: integer
          description: Number of containers paused
        ContainersStopped:
          type: integer
          description: Number of containers stopped
        Images:
          type: integer
          description: Number of images
        Driver:
          type: string
          description: Storage driver
        DriverStatus:
          type: array
          description: Storage driver status
          items:
            type: array
            items:
              type: string
        SystemStatus:
          type: array
          description: System status
          items:
            type: array
            items:
              type: string
        Plugins:
          type: object
          description: Plugins
          properties:
            Volume:
              type: array
              description: Volume plugins
              items:
                type: string
            Network:
              type: array
              description: Network plugins
              items:
                type: string
            Authorization:
              type: array
              description: Authorization plugins
              items:
                type: string
            Log:
              type: array
              description: Log plugins
              items:
                type: string
        MemoryLimit:
          type: boolean
          description: Whether memory limit support is enabled
        SwapLimit:
          type: boolean
          description: Whether swap limit support is enabled
        KernelMemory:
          type: boolean
          description: Whether kernel memory limit support is enabled
        KernelMemoryTCP:
          type: boolean
          description: Whether kernel memory TCP limit support is enabled
        CpuCfsPeriod:
          type: boolean
          description: Whether CPU CFS period support is enabled
        CpuCfsQuota:
          type: boolean
          description: Whether CPU CFS quota support is enabled
        CPUShares:
          type: boolean
          description: Whether CPU shares support is enabled
        CPUSet:
          type: boolean
          description: Whether CPUSet support is enabled
        PidsLimit:
          type: boolean
          description: Whether PIDs limit support is enabled
        IPv4Forwarding:
          type: boolean
          description: Whether IPv4 forwarding is enabled
        BridgeNfIptables:
          type: boolean
          description: Whether bridge netfilter iptables is enabled
        BridgeNfIp6tables:
          type: boolean
          description: Whether bridge netfilter ip6tables is enabled
        Debug:
          type: boolean
          description: Whether debug mode is enabled
        NFd:
          type: integer
          description: Number of file descriptors
        OomKillDisable:
          type: boolean
          description: Whether OOM kill is disabled
        NGoroutines:
          type: integer
          description: Number of goroutines
        SystemTime:
          type: string
          description: Current system time
          format: date-time
        LoggingDriver:
          type: string
          description: Logging driver
        CgroupDriver:
          type: string
          description: Cgroup driver
        CgroupVersion:
          type: string
          description: Cgroup version
        NEventsListener:
          type: integer
          description: Number of events listeners
        KernelVersion:
          type: string
          description: Kernel version
        OperatingSystem:
          type: string
          description: Operating system
        OSVersion:
          type: string
          description: Operating system version
        OSType:
          type: string
          description: Operating system type
        Architecture:
          type: string
          description: Hardware architecture
        IndexServerAddress:
          type: string
          description: Index server address
        RegistryConfig:
          type: object
          description: Registry configuration
          properties:
            AllowNondistributableArtifactsCIDRs:
              type: array
              description: List of CIDR blocks for which non-distributable artifacts are allowed
              items:
                type: string
            AllowNondistributableArtifactsHostnames:
              type: array
              description: List of hostnames for which non-distributable artifacts are allowed
              items:
                type: string
            InsecureRegistryCIDRs:
              type: array
              description: List of CIDR blocks for insecure registries
              items:
                type: string
            IndexConfigs:
              type: object
              description: Index configurations
              additionalProperties:
                type: object
                properties:
                  Name:
                    type: string
                    description: Name
                  Mirrors:
                    type: array
                    description: Mirrors
                    items:
                      type: string
                  Secure:
                    type: boolean
                    description: Whether the registry is secure
                  Official:
                    type: boolean
                    description: Whether the registry is official
            Mirrors:
              type: array
              description: Registry mirrors
              items:
                type: string
        NCPU:
          type: integer
          description: Number of CPUs
        MemTotal:
          type: integer
          description: Total memory
          format: int64
        GenericResources:
          type: array
          description: Generic resources
          items:
            type: object
            properties:
              DiscreteResourceSpec:
                type: object
                properties:
                  Kind:
                    type: string
                    description: Kind
                  Value:
                    type: integer
                    description: Value
                    format: int64
              NamedResourceSpec:
                type: object
                properties:
                  Kind:
                    type: string
                    description: Kind
                  Value:
                    type: string
                    description: Value
        DockerRootDir:
          type: string
          description: Docker root directory
        HttpProxy:
          type: string
          description: HTTP proxy
        HttpsProxy:
          type: string
          description: HTTPS proxy
        NoProxy:
          type: string
          description: No proxy
        Name:
          type: string
          description: Name
        Labels:
          type: array
          description: Labels
          items:
            type: string
        ExperimentalBuild:
          type: boolean
          description: Whether experimental build is enabled
        ServerVersion:
          type: string
          description: Server version
        Runtimes:
          type: object
          description: Runtimes
          additionalProperties:
            type: object
            properties:
              path:
                type: string
                description: Path
              runtimeArgs:
                type: array
                description: Runtime arguments
                items:
                  type: string
        DefaultRuntime:
          type: string
          description: Default runtime
        Swarm:
          type: object
          description: Swarm info
          properties:
            NodeID:
              type: string
              description: Node ID
            NodeAddr:
              type: string
              description: Node address
            LocalNodeState:
              type: string
              description: Local node state
            ControlAvailable:
              type: boolean
              description: Whether control is available
            Error:
              type: string
              description: Error
            RemoteManagers:
              type: array
              description: Remote managers
              items:
                type: object
                properties:
                  NodeID:
                    type: string
                    description: Node ID
                  Addr:
                    type: string
                    description: Address
            Nodes:
              type: integer
              description: Number of nodes
            Managers:
              type: integer
              description: Number of managers
            Cluster:
              type: object
              description: Cluster
              properties:
                ID:
                  type: string
                  description: ID
                Version:
                  type: object
                  description: Version
                  properties:
                    Index:
                      type: integer
                      description: Index
                      format: uint64
                CreatedAt:
                  type: string
                  description: Created at
                  format: date-time
                UpdatedAt:
                  type: string
                  description: Updated at
                  format: date-time
                Spec:
                  type: object
                  description: Spec
                  properties:
                    Name:
                      type: string
                      description: Name
                    Labels:
                      type: object
                      description: Labels
                      additionalProperties:
                        type: string
                    Orchestration:
                      type: object
                      description: Orchestration
                      properties:
                        TaskHistoryRetentionLimit:
                          type: integer
                          description: Task history retention limit
                    Raft:
                      type: object
                      description: Raft
                      properties:
                        SnapshotInterval:
                          type: integer
                          description: Snapshot interval
                        KeepOldSnapshots:
                          type: integer
                          description: Keep old snapshots
                        LogEntriesForSlowFollowers:
                          type: integer
                          description: Log entries for slow followers
                        ElectionTick:
                          type: integer
                          description: Election tick
                        HeartbeatTick:
                          type: integer
                          description: Heartbeat tick
                    Dispatcher:
                      type: object
                      description: Dispatcher
                      properties:
                        HeartbeatPeriod:
                          type: integer
                          description: Heartbeat period
                          format: int64
                    CAConfig:
                      type: object
                      description: CA config
                      properties:
                        NodeCertExpiry:
                          type: integer
                          description: Node cert expiry
                          format: int64
                        ExternalCAs:
                          type: array
                          description: External CAs
                          items:
                            type: object
                            properties:
                              Protocol:
                                type: string
                                description: Protocol
                              URL:
                                type: string
                                description: URL
                              Options:
                                type: object
                                description: Options
                                additionalProperties:
                                  type: string
                        SigningCACert:
                          type: string
                          description: Signing CA cert
                        SigningCAKey:
                          type: string
                          description: Signing CA key
                        ForceRotate:
                          type: integer
                          description: Force rotate
                          format: uint64
                    EncryptionConfig:
                      type: object
                      description: Encryption config
                      properties:
                        AutoLockManagers:
                          type: boolean
                          description: Auto lock managers
                    TaskDefaults:
                      type: object
                      description: Task defaults
                      properties:
                        LogDriver:
                          type: object
                          description: Log driver
                          properties:
                            Name:
                              type: string
                              description: Name
                            Options:
                              type: object
                              description: Options
                              additionalProperties:
                                type: string
        LiveRestoreEnabled:
          type: boolean
          description: Whether live restore is enabled
        Isolation:
          type: string
          description: Isolation
        InitBinary:
          type: string
          description: Init binary
        ContainerdCommit:
          type: object
          description: Containerd commit
          properties:
            ID:
              type: string
              description: ID
            Expected:
              type: string
              description: Expected
        RuncCommit:
          type: object
          description: Runc commit
          properties:
            ID:
              type: string
              description: ID
            Expected:
              type: string
              description: Expected
        InitCommit:
          type: object
          description: Init commit
          properties:
            ID:
              type: string
              description: ID
            Expected:
              type: string
              description: Expected
        SecurityOptions:
          type: array
          description: Security options
          items:
            type: string
        ProductLicense:
          type: string
          description: Product license
        DefaultAddressPools:
          type: array
          description: Default address pools
          items:
            type: object
            properties:
              Base:
                type: string
                description: Base
              Size:
                type: integer
                description: Size
        Warnings:
          type: array
          description: Warnings
          items:
            type: string

    VersionResponse:
      type: object
      properties:
        Platform:
          type: object
          description: Platform information
          properties:
            Name:
              type: string
              description: Platform name
        Components:
          type: array
          description: Components
          items:
            type: object
            properties:
              Name:
                type: string
                description: Component name
              Version:
                type: string
                description: Component version
              Details:
                type: object
                description: Component details
                additionalProperties:
                  type: string
        Version:
          type: string
          description: Version
        ApiVersion:
          type: string
          description: API version
        MinAPIVersion:
          type: string
          description: Minimum API version
        GitCommit:
          type: string
          description: Git commit
        GoVersion:
          type: string
          description: Go version
        Os:
          type: string
          description: Operating system
        Arch:
          type: string
          description: Architecture
        KernelVersion:
          type: string
          description: Kernel version
        Experimental:
          type: boolean
          description: Whether experimental features are enabled
        BuildTime:
          type: string
          description: Build time

    AuthConfig:
      type: object
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
        email:
          type: string
          description: Email
        serveraddress:
          type: string
          description: Server address

    AuthResponse:
      type: object
      properties:
        Status:
          type: string
          description: Status
        IdentityToken:
          type: string
          description: Identity token

    EventMessage:
      type: object
      properties:
        Type:
          type: string
          description: Event type
        Action:
          type: string
          description: Event action
        Actor:
          type: object
          description: Event actor
          properties:
            ID:
              type: string
              description: Actor ID
            Attributes:
              type: object
              description: Actor attributes
              additionalProperties:
                type: string
        scope:
          type: string
          description: Event scope
        time:
          type: integer
          description: Event time
          format: int64
        timeNano:
          type: integer
          description: Event time in nanoseconds
          format: int64

  # Parameters section
  parameters:
    name:
      name: name
      in: query
      description: Container name
      schema:
        type: string

    id:
      name: id
      in: path
      description: Container ID or name
      required: true
      schema:
        type: string

    all:
      name: all
      in: query
      description: Show all containers (default shows just running)
      schema:
        type: boolean
        default: false

    limit:
      name: limit
      in: query
      description: Show limit last created containers
      schema:
        type: integer

    size:
      name: size
      in: query
      description: Show the containers sizes
      schema:
        type: boolean
        default: false

    filters:
      name: filters
      in: query
      description: Filter output based on conditions provided
      schema:
        type: string

    follow:
      name: follow
      in: query
      description: Follow log output
      schema:
        type: boolean
        default: false

    stdout:
      name: stdout
      in: query
      description: Show stdout log
      schema:
        type: boolean
        default: false

    stderr:
      name: stderr
      in: query
      description: Show stderr log
      schema:
        type: boolean
        default: false

    since:
      name: since
      in: query
      description: Show logs since timestamp
      schema:
        type: string

    until:
      name: until
      in: query
      description: Show logs before timestamp
      schema:
        type: string

    timestamps:
      name: timestamps
      in: query
      description: Show timestamps
      schema:
        type: boolean
        default: false

    tail:
      name: tail
      in: query
      description: Number of lines to show from the end of the logs
      schema:
        type: string
        default: "all"

    detachKeys:
      name: detachKeys
      in: query
      description: Override the key sequence for detaching a container
      schema:
        type: string

    t:
      name: t
      in: query
      description: Seconds to wait before killing the container
      schema:
        type: integer
        default: 10

    signal:
      name: signal
      in: query
      description: Signal to send to the container
      schema:
        type: string
        default: "KILL"

    v:
      name: v
      in: query
      description: Remove anonymous volumes associated with the container
      schema:
        type: boolean
        default: false

    force:
      name: force
      in: query
      description: Force the removal of a running container
      schema:
        type: boolean
        default: false

    path:
      name: path
      in: query
      description: Resource path in the container
      required: true
      schema:
        type: string

    noOverwriteDirNonDir:
      name: noOverwriteDirNonDir
      in: query
      description: Do not overwrite directory with non-directory and vice versa
      schema:
        type: string

    stream:
      name: stream
      in: query
      description: Stream statistics
      schema:
        type: boolean
        default: true

    condition:
      name: condition
      in: query
      description: Wait until a container state reaches the given condition
      schema:
        type: string
        enum: [not-running, next-exit, removed]
        default: not-running

    fromImage:
      name: fromImage
      in: query
      description: Name of the image to pull
      required: true
      schema:
        type: string

    tag:
      name: tag
      in: query
      description: Tag of the image to pull
      schema:
        type: string
        default: "latest"

    platform:
      name: platform
      in: query
      description: Platform in the format os[/arch[/variant]]
      schema:
        type: string

    repo:
      name: repo
      in: query
      description: The repository to tag in
      required: true
      schema:
        type: string

    quiet:
      name: quiet
      in: query
      description: Suppress progress details during load
      schema:
        type: boolean
        default: false

    t_build:
      name: t
      in: query
      description: Name and optionally a tag in the 'name:tag' format
      schema:
        type: string

    q:
      name: q
      in: query
      description: Suppress verbose build output
      schema:
        type: boolean
        default: false

    nocache:
      name: nocache
      in: query
      description: Do not use the cache when building the image
      schema:
        type: boolean
        default: false

    rm:
      name: rm
      in: query
      description: Remove intermediate containers after a successful build
      schema:
        type: boolean
        default: true

    dockerfile:
      name: dockerfile
      in: query
      description: Name of the Dockerfile
      schema:
        type: string
        default: "Dockerfile"

    target:
      name: target
      in: query
      description: Set the target build stage to build
      schema:
        type: string

    buildargs:
      name: buildargs
      in: query
      description: Build-time variables as JSON
      schema:
        type: string

    labels:
      name: labels
      in: query
      description: Set metadata for an image as JSON
      schema:
        type: string

    cachefrom:
      name: cachefrom
      in: query
      description: Images to consider as cache sources as JSON
      schema:
        type: string

    networkmode:
      name: networkmode
      in: query
      description: Set the networking mode for the RUN instructions during build
      schema:
        type: string

    output:
      name: output
      in: query
      description: Output destination
      schema:
        type: string

    forcerm:
      name: forcerm
      in: query
      description: Always remove intermediate containers, even upon failure
      schema:
        type: boolean
        default: false

# Paths section with all endpoints
paths:
  # Container paths
  /containers/create:
    post:
      summary: Create a container
      description: Create a new container
      operationId: ContainerCreate
      parameters:
        - $ref: '#/components/parameters/name'
      requestBody:
        description: Container configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerRequest'
      responses:
        '201':
          description: Container created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContainerResponse'
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/json:
    get:
      summary: List containers
      description: Returns a list of containers
      operationId: ContainerList
      parameters:
        - $ref: '#/components/parameters/all'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/filters'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerSummary'
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/json:
    get:
      summary: Inspect a container
      description: Return low-level information about a container
      operationId: ContainerInspect
      parameters:
        - $ref: '#/components/parameters/id'
        - name: size
          in: query
          description: Return the size of container as fields SizeRw and SizeRootFs
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerInspectResponse'
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/logs:
    get:
      summary: Get container logs
      description: Get stdout and stderr logs from a container
      operationId: ContainerLogs
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/follow'
        - $ref: '#/components/parameters/stdout'
        - $ref: '#/components/parameters/stderr'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/until'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/tail'
      responses:
        '200':
          description: No error
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/start:
    post:
      summary: Start a container
      description: Start a container
      operationId: ContainerStart
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/detachKeys'
      responses:
        '204':
          description: No error
        '304':
          description: Container already started
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/stop:
    post:
      summary: Stop a container
      description: Stop a container
      operationId: ContainerStop
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/t'
      responses:
        '204':
          description: No error
        '304':
          description: Container already stopped
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/restart:
    post:
      summary: Restart a container
      description: Restart a container
      operationId: ContainerRestart
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/t'
      responses:
        '204':
          description: No error
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/kill:
    post:
      summary: Kill a container
      description: Kill a container
      operationId: ContainerKill
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/signal'
      responses:
        '204':
          description: No error
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Container is paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/pause:
    post:
      summary: Pause a container
      description: Pause a container
      operationId: ContainerPause
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No error
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/unpause:
    post:
      summary: Unpause a container
      description: Unpause a container
      operationId: ContainerUnpause
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No error
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}:
    delete:
      summary: Remove a container
      description: Remove a container
      operationId: ContainerDelete
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/v'
        - $ref: '#/components/parameters/force'
      responses:
        '204':
          description: No error
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/attach:
    post:
      summary: Attach to a container
      description: Attach to a container to read its output or send it input
      operationId: ContainerAttach
      parameters:
        - $ref: '#/components/parameters/id'
        - name: detachKeys
          in: query
          description: Override the key sequence for detaching a container
          schema:
            type: string
        - name: logs
          in: query
          description: Return logs
          schema:
            type: boolean
            default: false
        - name: stream
          in: query
          description: Return stream
          schema:
            type: boolean
            default: false
        - name: stdin
          in: query
          description: Attach to stdin
          schema:
            type: boolean
            default: false
        - name: stdout
          in: query
          description: Attach to stdout
          schema:
            type: boolean
            default: false
        - name: stderr
          in: query
          description: Attach to stderr
          schema:
            type: boolean
            default: false
      responses:
        '101':
          description: Hijacked connection
        '200':
          description: No error
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/archive:
    get:
      summary: Get an archive of a filesystem resource in a container
      description: Get a tar archive of a resource in the filesystem of a container
      operationId: ContainerArchive
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: No error
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container or path does not exist inside the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    head:
      summary: Get information about files in a container
      description: Get information about files in a container in the form of a stat structure
      operationId: ContainerArchiveInfo
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: No error
          headers:
            X-Docker-Container-Path-Stat:
              schema:
                type: string
              description: JSON-encoded stat information for the specified path
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container or path does not exist inside the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Extract an archive of files or folders to a directory in a container
      description: Upload a tar archive to be extracted to a path in the filesystem of a container
      operationId: ContainerArchiveExtract
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/noOverwriteDirNonDir'
      requestBody:
        description: The input stream must be a tar archive compressed with one of the following algorithms gzip, bzip2, xz
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: No error
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Permission denied, the volume or container rootfs is marked as read-only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container or path does not exist inside the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/stats:
    get:
      summary: Get container stats based on resource usage
      description: This endpoint returns a live stream of a container's resource usage statistics
      operationId: ContainerStats
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/stream'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: object
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/rename:
    post:
      summary: Rename a container
      description: Rename a container
      operationId: ContainerRename
      parameters:
        - $ref: '#/components/parameters/id'
        - name: name
          in: query
          description: New name for the container
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No error
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Name already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/wait:
    post:
      summary: Wait for a container
      description: Block until a container stops, then returns the exit code
      operationId: ContainerWait
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/condition'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerWaitResponse'
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/exec:
    post:
      summary: Create an exec instance
      description: Run a command inside a running container
      operationId: ContainerExec
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Exec configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecConfig'
      responses:
        '201':
          description: No error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Id:
                    type: string
                    description: Exec instance ID
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Container is paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /containers/{id}/remove:
    post:
      summary: Remove a container
      description: Remove a container
      operationId: ContainerRemove
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/v'
        - $ref: '#/components/parameters/force'
      responses:
        '204':
          description: No error
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Image paths
  /images/json:
    get:
      summary: List images
      description: Returns a list of images on the server
      operationId: ImageList
      parameters:
        - name: all
          in: query
          description: Show all images (default hides intermediate images)
          schema:
            type: boolean
            default: false
        - name: filters
          in: query
          description: Filter output based on conditions provided
          schema:
            type: string
        - name: digests
          in: query
          description: Show digest information
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageSummary'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/create:
    post:
      summary: Create an image
      description: Create an image by pulling it from a registry
      operationId: ImageCreate
      parameters:
        - $ref: '#/components/parameters/fromImage'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/platform'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Repository does not exist or no read access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/{name}/push:
    post:
      summary: Push an image
      description: Push an image to a registry
      operationId: ImagePush
      parameters:
        - name: name
          in: path
          description: Image name or ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/tag'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: object
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/{name}/tag:
    post:
      summary: Tag an image
      description: Tag an image so that it becomes part of a repository
      operationId: ImageTag
      parameters:
        - name: name
          in: path
          description: Image name or ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/tag'
      responses:
        '201':
          description: No error
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/{name}:
    delete:
      summary: Remove an image
      description: Remove an image
      operationId: ImageDelete
      parameters:
        - name: name
          in: path
          description: Image name or ID
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Force removal of the image
          schema:
            type: boolean
            default: false
        - name: noprune
          in: query
          description: Do not delete untagged parent images
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Untagged:
                      type: string
                      description: The image ID of an untagged image
                    Deleted:
                      type: string
                      description: The image ID of a deleted image
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/{name}/json:
    get:
      summary: Inspect an image
      description: Return low-level information about an image
      operationId: ImageInspect
      parameters:
        - name: name
          in: path
          description: Image name or ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInspect'
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/load:
    post:
      summary: Load an image
      description: Load an image from a tar archive
      operationId: ImageLoad
      parameters:
        - $ref: '#/components/parameters/quiet'
      requestBody:
        description: Tar archive containing the image
        required: true
        content:
          application/x-tar:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageLoadResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Network paths
  /networks:
    get:
      summary: List networks
      description: Returns a list of networks
      operationId: NetworkList
      parameters:
        - name: filters
          in: query
          description: Filter output based on conditions provided
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Network'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /networks/{id}:
    get:
      summary: Inspect a network
      description: Return low-level information about a network
      operationId: NetworkInspect
      parameters:
        - name: id
          in: path
          description: Network ID or name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
        '404':
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove a network
      description: Remove a network
      operationId: NetworkDelete
      parameters:
        - name: id
          in: path
          description: Network ID or name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No error
        '404':
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /networks/create:
    post:
      summary: Create a network
      description: Create a network
      operationId: NetworkCreate
      requestBody:
        description: Network configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkCreateRequest'
      responses:
        '201':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkCreateResponse'
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /networks/{id}/connect:
    post:
      summary: Connect a container to a network
      description: Connect a container to a network
      operationId: NetworkConnect
      parameters:
        - name: id
          in: path
          description: Network ID or name
          required: true
          schema:
            type: string
      requestBody:
        description: Container configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnectRequest'
      responses:
        '200':
          description: No error
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Network or container not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Volume paths
  /volumes:
    get:
      summary: List volumes
      description: Returns a list of volumes
      operationId: VolumeList
      parameters:
        - name: filters
          in: query
          description: Filter output based on conditions provided
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeListResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /volumes/create:
    post:
      summary: Create a volume
      description: Create a volume
      operationId: VolumeCreate
      requestBody:
        description: Volume configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeCreateRequest'
      responses:
        '201':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /volumes/{name}:
    get:
      summary: Inspect a volume
      description: Return low-level information about a volume
      operationId: VolumeInspect
      parameters:
        - name: name
          in: path
          description: Volume name or ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '404':
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Remove a volume
      description: Remove a volume
      operationId: VolumeDelete
      parameters:
        - name: name
          in: path
          description: Volume name or ID
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Force the removal of the volume
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No error
        '404':
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Volume is in use and cannot be removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Exec paths
  /exec/{id}/start:
    post:
      summary: Start an exec instance
      description: Starts a previously created exec instance
      operationId: ExecStart
      parameters:
        - name: id
          in: path
          description: Exec instance ID
          required: true
          schema:
            type: string
      requestBody:
        description: Exec start configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecStartConfig'
      responses:
        '101':
          description: Hijacked connection
        '200':
          description: No error
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Container is paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /exec/{id}/resize:
    post:
      summary: Resize an exec instance
      description: Resize the TTY for an exec instance
      operationId: ExecResize
      parameters:
        - name: id
          in: path
          description: Exec instance ID
          required: true
          schema:
            type: string
        - name: h
          in: query
          description: Height of the TTY session in characters
          schema:
            type: integer
        - name: w
          in: query
          description: Width of the TTY session in characters
          schema:
            type: integer
      responses:
        '200':
          description: No error
        '404':
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /exec/{id}/json:
    get:
      summary: Inspect an exec instance
      description: Return low-level information about an exec instance
      operationId: ExecInspect
      parameters:
        - name: id
          in: path
          description: Exec instance ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecInspectResponse'
        '404':
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Distribution paths
  /distribution/{name}/json:
    get:
      summary: Get image distribution information
      description: Return image digest and platform information
      operationId: DistributionInspect
      parameters:
        - name: name
          in: path
          description: Image name or ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionInspect'
        '404':
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # System paths
  /info:
    get:
      summary: Get system information
      description: Return system information
      operationId: SystemInfo
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /version:
    get:
      summary: Get version
      description: Return version information
      operationId: SystemVersion
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /_ping:
    get:
      summary: Ping
      description: Ping the server
      operationId: SystemPing
      responses:
        '200':
          description: No error
          headers:
            API-Version:
              schema:
                type: string
              description: API version
            Docker-Experimental:
              schema:
                type: boolean
              description: Whether experimental features are enabled
            Builder-Version:
              schema:
                type: string
              description: Builder version
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth:
    post:
      summary: Check auth configuration
      description: Check auth configuration
      operationId: SystemAuth
      requestBody:
        description: Authentication configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthConfig'
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '204':
          description: No error
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events:
    get:
      summary: Monitor events
      description: Stream real-time events from the server
      operationId: SystemEvents
      parameters:
        - name: since
          in: query
          description: Show events created since this timestamp
          schema:
            type: string
        - name: until
          in: query
          description: Show events created until this timestamp
          schema:
            type: string
        - name: filters
          in: query
          description: Filter output based on conditions provided
          schema:
            type: string
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                    description: Event type
                  Action:
                    type: string
                    description: Event action
                  Actor:
                    type: object
                    description: Event actor
                    properties:
                      ID:
                        type: string
                        description: Actor ID
                      Attributes:
                        type: object
                        description: Actor attributes
                        additionalProperties:
                          type: string
                  time:
                    type: integer
                    description: Event time
                    format: int64
                  timeNano:
                    type: integer
                    description: Event time in nanoseconds
                    format: int64
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Build paths
  /build:
    post:
      summary: Build an image
      description: Build an image from a Dockerfile
      operationId: ImageBuild
      parameters:
        - $ref: '#/components/parameters/dockerfile'
        - $ref: '#/components/parameters/t_build'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/nocache'
        - $ref: '#/components/parameters/rm'
        - $ref: '#/components/parameters/forcerm'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/target'
        - $ref: '#/components/parameters/buildargs'
        - $ref: '#/components/parameters/labels'
        - $ref: '#/components/parameters/cachefrom'
        - $ref: '#/components/parameters/networkmode'
        - $ref: '#/components/parameters/output'
      requestBody:
        description: A tar archive compressed with one of the following algorithms gzip, bzip2, xz
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: No error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResult'
        '400':
          description: Bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
